// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: config_server.proto

#ifndef PROTOBUF_config_server_rpc__INCLUDED
#define PROTOBUF_config_server_rpc__INCLUDED


#include "config_server.pb.h"

namespace config_server {


class ConfigGetRequest;
class ConfigGetResponse;

class ConfigGet
{
public:
  typedef ConfigGetRequest RequestType;
  typedef ConfigGetResponse ResponseType;
  enum { CmdID = CmdID_ConfigGet };
  static const char* name() { return "ConfigGet"; }
};


class ConfigUpdateRequest;
class CommonResponse;

class ConfigUpdate
{
public:
  typedef ConfigUpdateRequest RequestType;
  typedef CommonResponse ResponseType;
  enum { CmdID = CmdID_ConfigUpdate };
  static const char* name() { return "ConfigUpdate"; }
};


class StatusRegisterRequest;
class CommonResponse;

class StatusRegister
{
public:
  typedef StatusRegisterRequest RequestType;
  typedef CommonResponse ResponseType;
  enum { CmdID = CmdID_StatusRegister };
  static const char* name() { return "StatusRegister"; }
};


class StatusRefreshRequest;
class CommonResponse;

class StatusRefresh
{
public:
  typedef StatusRefreshRequest RequestType;
  typedef CommonResponse ResponseType;
  enum { CmdID = CmdID_StatusRefresh };
  static const char* name() { return "StatusRefresh"; }
};


class StatusQueryRequest;
class StatusQueryResponse;

class StatusQuery
{
public:
  typedef StatusQueryRequest RequestType;
  typedef StatusQueryResponse ResponseType;
  enum { CmdID = CmdID_StatusQuery };
  static const char* name() { return "StatusQuery"; }
};


class ServerAcquireRequest;
class ServerAcquireResponse;

class ServerAcquire
{
public:
  typedef ServerAcquireRequest RequestType;
  typedef ServerAcquireResponse ResponseType;
  enum { CmdID = CmdID_ServerAcquire };
  static const char* name() { return "ServerAcquire"; }
};


} // namespace config_server

#endif // PROTOBUF_config_server_rpc__INCLUDED
